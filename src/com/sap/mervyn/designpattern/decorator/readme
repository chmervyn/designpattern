Decorator Pattern(装饰者模式): 动态的给一个对象添加一些额外的职责。就增加功能来说，装饰模式相比生成子类更加灵活。

优点：
    装饰类和被装饰类可以独立发展，而不会耦合；
    装饰模式是继承关系的一个替代方案；
    装饰模式可以动态的扩展一个实现类的功能。

缺点：
    多层装饰增加了系统的复杂性。


特点：
    继承是静态的给类增加功能，而装饰模式是动态的给类增加功能，装饰功能可以动态的随意组合，扩展性好。