State Pattern(状态模式): 当一个对象内在状态改变时允许其改变行为，这个对象看起来像改变了其类。

优点：
    结构清晰：避免了过多的switch...case活着if...else语句的使用，避免了程序的复杂性，提高了系统的可维护性
    遵循设计原则：
    封装行非常好

缺点：
    子类会太多，引起类膨胀

使用场景：
    行为随状态改变而改变的场景
    条件、分支判断语句的替代者

注意事项：
    状态模式适用于当某个对象在它的状态发生改变时，它的行为也随着发生比较大的变化。